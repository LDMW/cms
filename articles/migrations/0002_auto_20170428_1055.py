# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-04-28 10:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('articles', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AudienceTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_tagged_audience_items', to='articles.ArticlePage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles_audiencetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_tagged_items', to='articles.ArticlePage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles_categorytag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_tagged_content_items', to='articles.ArticlePage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles_contenttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='articlepage',
            name='audience_tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Audience tags, eg: "male", "female", "shiftworkers"', through='articles.AudienceTag', to='taggit.Tag', verbose_name='Audience Tags'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='content_tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Content Type tags, eg: "videos", "blogs", "free", "subscription"', through='articles.ContentTag', to='taggit.Tag', verbose_name='Content Tags'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Category tags, eg: "insomnia", "fatigue", "snoring"', through='articles.CategoryTag', to='taggit.Tag', verbose_name='Main Tags'),
        ),
    ]
