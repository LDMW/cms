# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-09-04 14:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0033_remove_golive_expiry_help_text'),
        ('wagtailimages', '0019_delete_filter'),
        ('resources', '0019_projectinfoblock'),
    ]

    operations = [
        migrations.CreateModel(
            name='Main',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('banner', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Banner at the top of every page')),
                ('header', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Hero title')),
                ('body', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Description of page')),
                ('filter_label_1', models.TextField(blank=True, help_text='Label/Question for first set of filters')),
                ('filter_label_2', models.TextField(blank=True, help_text='Label/Question for second set of filters')),
                ('filter_label_3', models.TextField(blank=True, help_text='Label/Question for third set of filters')),
                ('lookingfor', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='\n        Information on how to leave suggestions and what they are for\n        ')),
                ('alpha', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='What is Alpha')),
                ('alphatext', wagtail.wagtailcore.fields.RichTextField(blank=True, help_text='Why to take part in the alpha')),
                ('hero_image', models.ForeignKey(blank=True, help_text='\n            Max file size: 10MB. Choose from: GIF, JPEG, PNG\n            (but pick PNG if you have the choice)\n        ', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='MainFormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.CharField(blank=True, help_text='Default value. Comma separated values supported for checkboxes.', max_length=255, verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='resources.Main')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='homefooterblocks',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='footer_blocks', to='resources.Main'),
        ),
        migrations.AlterField(
            model_name='homefooterlinks',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='footer_links', to='resources.Main'),
        ),
        migrations.AlterField(
            model_name='projectinfoblock',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_info_block', to='resources.Main'),
        ),
    ]
